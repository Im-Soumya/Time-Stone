import Link from 'next/link'
import Head from 'next/head'
// import Image from 'next/image'
// import { Inter } from '@next/font/google'
// import styles from '../styles/Home.module.css'

// const inter = Inter({ subsets: ['latin'] })
import { ApolloClient, InMemoryCache, gql } from "@apollo/client"

// import { allProducts } from "./data/products.json"

export default function Home({ allProducts }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <h1>All products</h1>
        <div>
          {
            allProducts.map((product, index) => (
              <div key={index}>
                <Link href={`products/${product.slug}`}>
                  <div>
                    <img src={product.image.url} alt={product.name} />
                  </div>
                </Link>

                <div>
                  <h1>{product.name}</h1>
                  <p>${product.price}</p>
                  <button
                    className='snipcart-add-item'
                    data-item-id={product.id}
                    data-item-price={product.price}
                    // data-item-url={`products/${product.slug}`}
                    data-item-image={product.image.url}
                    data-item-name={product.name}
                  >
                    Add to Cart
                  </button>
                </div>
              </div>
            ))
          }
        </div>
      </main>
    </>
  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: process.env.CONTENT_API,
    cache: new InMemoryCache()
  })
  const data = await client.query({
    query: gql`
      query ProductsQuery {
        products {
          id
          name
          brand
          category
          price
          slug
          image {
            url
          }
        }
      }
    `
  })

  const allProducts = data.data.products

  return {
    props: {
      allProducts
    }
  }
}
